[{"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/index.jsx":"1","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/App.jsx":"2","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/index.jsx":"3","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/HomePage.jsx":"4","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/index.jsx":"5","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/Navbar.jsx":"6","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/LoginPage.jsx":"7","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/RegisterPage.jsx":"8","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/sweetalert2/toast.jsx":"9","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/axios/index.jsx":"10","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/index.jsx":"11","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/reducers/index.jsx":"12","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/reducers/unitReducer.jsx":"13","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/ResultPage.jsx":"14","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/SelectUserProfilePage.jsx":"15","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/DashboardVendorPage.jsx":"16","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/AddUnitPage.jsx":"17","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/fetchUnit.jsx":"18","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/addUnit.jsx":"19","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/index.jsx":"20","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setUnits.jsx":"21","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setError.jsx":"22","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setLoading.jsx":"23","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setNewUnit.jsx":"24","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/EditUnitPage.jsx":"25","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/deleteUnit.jsx":"26","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setUnit.jsx":"27","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/deleteUnit.jsx":"28","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/fetchUnitById.jsx":"29","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/VendorUnit.jsx":"30","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/postEditUnit.jsx":"31","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setEditedUnit.jsx":"32","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setIsLogin.jsx":"33"},{"size":439,"mtime":1608002442166,"results":"34","hashOfConfig":"35"},{"size":984,"mtime":1608101294199,"results":"36","hashOfConfig":"35"},{"size":473,"mtime":1608091500347,"results":"37","hashOfConfig":"35"},{"size":5850,"mtime":1608111957020,"results":"38","hashOfConfig":"35"},{"size":99,"mtime":1608108610644,"results":"39","hashOfConfig":"35"},{"size":8318,"mtime":1608110986846,"results":"40","hashOfConfig":"35"},{"size":6757,"mtime":1608110883876,"results":"41","hashOfConfig":"35"},{"size":8297,"mtime":1608091500347,"results":"42","hashOfConfig":"35"},{"size":143,"mtime":1608002442166,"results":"43","hashOfConfig":"35"},{"size":94,"mtime":1608002442166,"results":"44","hashOfConfig":"35"},{"size":332,"mtime":1608044811652,"results":"45","hashOfConfig":"35"},{"size":56,"mtime":1608002442166,"results":"46","hashOfConfig":"35"},{"size":1263,"mtime":1608109839493,"results":"47","hashOfConfig":"35"},{"size":11641,"mtime":1608109099121,"results":"48","hashOfConfig":"35"},{"size":9117,"mtime":1608108610648,"results":"49","hashOfConfig":"35"},{"size":2589,"mtime":1608109736731,"results":"50","hashOfConfig":"35"},{"size":6958,"mtime":1608108610648,"results":"51","hashOfConfig":"35"},{"size":464,"mtime":1608044811648,"results":"52","hashOfConfig":"35"},{"size":566,"mtime":1608108610644,"results":"53","hashOfConfig":"35"},{"size":444,"mtime":1608109929518,"results":"54","hashOfConfig":"35"},{"size":90,"mtime":1608044811652,"results":"55","hashOfConfig":"35"},{"size":86,"mtime":1608044811652,"results":"56","hashOfConfig":"35"},{"size":106,"mtime":1608091500347,"results":"57","hashOfConfig":"35"},{"size":89,"mtime":1608044811652,"results":"58","hashOfConfig":"35"},{"size":6561,"mtime":1608108610648,"results":"59","hashOfConfig":"35"},{"size":530,"mtime":1608091500347,"results":"60","hashOfConfig":"35"},{"size":86,"mtime":1608091500347,"results":"61","hashOfConfig":"35"},{"size":88,"mtime":1608091500347,"results":"62","hashOfConfig":"35"},{"size":522,"mtime":1608091500347,"results":"63","hashOfConfig":"35"},{"size":1816,"mtime":1608110771554,"results":"64","hashOfConfig":"35"},{"size":433,"mtime":1608108610644,"results":"65","hashOfConfig":"35"},{"size":100,"mtime":1608108610648,"results":"66","hashOfConfig":"35"},{"size":94,"mtime":1608109914062,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"mirgac",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/index.jsx",[],["138","139"],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/App.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/HomePage.jsx",["140"],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/Navbar.jsx",["141"],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/LoginPage.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/RegisterPage.jsx",["142"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport validator from \"validator\";\nimport Swal from \"sweetalert2\";\nimport axios from \"../axios\";\nimport Toast from \"../sweetalert2/toast\";\nimport { Link } from \"react-router-dom\";\n\nexport default function RegisterPage() {\n  const router = useHistory();\n  const [newUser, setNewUser] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [newUserStatus, setStatus] = useState(\"\");\n\n  const handleInput = (target, value) => {\n    switch (target) {\n      case \"firstName\":\n        setNewUser({ ...newUser, firstName: value });\n        break;\n      case \"lastName\":\n        setNewUser({ ...newUser, lastName: value });\n        break;\n      case \"email\":\n        setNewUser({ ...newUser, email: value });\n        break;\n      case \"password\":\n        setNewUser({ ...newUser, password: value });\n        break;\n      case \"status\":\n        setStatus(value);\n        break;\n      default:\n        setNewUser(newUser);\n        break;\n    }\n  };\n\n  const handleSubmitButton = async () => {\n    try {\n      const errors = [];\n      if (!newUser.firstName) errors.push(\"First Name cannot be empty\");\n      if (!newUser.email) errors.push(\"Email cannot be empty\");\n      if (!validator.isEmail(newUser.email))\n        errors.push(\"Input should be a valid email\");\n      if (!newUser.password) errors.push(\"Password cannot be empty\");\n      if (newUser.password.length < 6)\n        errors.push(\"Passwords must have at least 6 characters\");\n      if (!newUserStatus) errors.push(\"Please select your type account\");\n\n      if (errors.length !== 0) {\n        // * Error Validation Forms\n        Swal.fire({\n          title: \"Oops...\",\n          icon: \"error\",\n          html: `\n          <div class=\"ml-5 text-left\">\n            ${errors.join(\"<br/>\")}\n          </div>\n          `,\n        });\n      } else {\n        if (newUserStatus === \"User\") {\n          // console.log(newUser, 'ini user')\n          const {\n            data: { email },\n          } = await axios({\n            method: \"POST\",\n            url: \"/users/register\",\n            data: newUser,\n          });\n          Toast.fire({\n            title: \"Yay!\",\n            icon: \"success\",\n            text: `Successfully registered ${email}`,\n          });\n          router.push(\"/login\");\n        } else {\n          const {\n            data: { email },\n          } = await axios({\n            method: \"POST\",\n            url: \"/vendors/register\",\n            data: newUser,\n          });\n          Toast.fire({\n            title: \"Yay!\",\n            icon: \"success\",\n            text: `Successfully registered ${email}`,\n          });\n          router.push(\"/login\");\n        }\n      }\n    } catch ({\n      response: {\n        data: { message: errorMessage },\n      },\n    }) {\n      // * Error from API Request to server\n      Swal.fire({\n        title: \"Oops...\",\n        icon: \"error\",\n        text: errorMessage,\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row bg-blue-dark nunito\" style={{ minHeight: \"88.7vh\" }}>\n        <div className=\"col-5 russo-one \">\n          <div className=\"mt-5 display-2 ml-5 pt-5 text-white\">Register</div>\n          <div className=\"ml-4 pl-3\">\n            <p class=\"ml-3 text-secondary\">\n              Already have an account? <Link to=\"/login\">Login here.</Link>\n            </p>\n          </div>\n        </div>\n        <div className=\"col-7 pt-3 px-5\">\n          <div className=\"card shadow-lg bg-card2\">\n            <div className=\"rounded\">\n              <div className=\"px-auto pt-5 pb-5 mx-4\">\n                <div class=\"input-group mb-2 mt-4\">\n                  <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">\n                      <i className=\"fa p-auto fa-address-card\"></i>\n                    </div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"First Name\"\n                    required\n                    value={newUser.firstName}\n                    onChange={(e) => handleInput(\"firstName\", e.target.value)}\n                  />\n                </div>\n                <div class=\"input-group mb-2 mt-4\">\n                  <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">\n                      <i className=\"fa p-auto fa-id-card\"></i>\n                    </div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Last Name\"\n                    required\n                    value={newUser.lastName}\n                    onChange={(e) => handleInput(\"lastName\", e.target.value)}\n                  />\n                </div>\n                <div class=\"input-group mb-2 mt-4\">\n                  <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">@</div>\n                  </div>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Email\"\n                    required\n                    value={newUser.email}\n                    onChange={(e) => handleInput(\"email\", e.target.value)}\n                  />\n                </div>\n                <div class=\"input-group mb-2 mt-4\">\n                  <div class=\"input-group-prepend\">\n                    <div class=\"input-group-text\">\n                      <i className=\"fa fa-lock p-auto\"></i>\n                    </div>\n                  </div>\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    placeholder=\"Password\"\n                    required\n                    value={newUser.password}\n                    onChange={(e) => handleInput(\"password\", e.target.value)}\n                  />\n                </div>\n                <div className=\"text-center text-secondary py-2\">\n                  <h5>\n                    <strong>Register as</strong>\n                  </h5>\n                </div>\n                <div className=\"row mx-3\">\n                  <div class=\"col-6 input-group\">\n                    <div class=\"input-group-prepend\">\n                      <div class=\"input-group-text\">\n                        <input\n                          type=\"radio\"\n                          name=\"category\"\n                          aria-label=\"Radio button for following text input\"\n                          value=\"Vendor\"\n                          onClick={(e) => console.log(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      aria-label=\"Text input with radio button\"\n                      disabled\n                      value=\"Vendor\"\n                    />\n                  </div>\n\n                  <div class=\"col-6 input-group\">\n                    <div class=\"input-group-prepend\">\n                      <div class=\"input-group-text\">\n                        <input\n                          type=\"radio\"\n                          value=\"User\"\n                          name=\"category\"\n                          onClick={(e) => console.log(e.target.value)}\n                          aria-label=\"Radio button for following text input\"\n                        />\n                      </div>\n                    </div>\n                    <input\n                      type=\"text\"\n                      class=\"form-control\"\n                      aria-label=\"Text input with radio button\"\n                      disabled\n                      value=\"User\"\n                    />\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-center\">\n                  <button className=\"btn bg-gold mt-4 px-5 regbtn\">\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Register&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/sweetalert2/toast.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/axios/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/reducers/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/reducers/unitReducer.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/ResultPage.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/SelectUserProfilePage.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/DashboardVendorPage.jsx",["143","144"],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/AddUnitPage.jsx",["145","146"],"import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { isURL } from \"validator\";\nimport addUnit from \"../hooks/addUnit\";\n\nexport default function AddUnitPage() {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const vendorId = localStorage.getItem(\"id\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [newUnit, setNewUnit] = useState({\n    name: \"\",\n    brand: \"\",\n    type: \"\",\n    year: 0,\n    category: \"\",\n    imageUrl: \"\",\n    location: \"\",\n    price: \"\",\n  });\n\n  const handleInput = (target, value) => {\n    switch (target) {\n      case \"name\":\n        setNewUnit({ ...newUnit, name: value });\n        break;\n      case \"brand\":\n        setNewUnit({ ...newUnit, brand: value });\n        break;\n      case \"type\":\n        setNewUnit({ ...newUnit, type: value });\n        break;\n      case \"year\":\n        setNewUnit({ ...newUnit, year: value });\n        break;\n      case \"category\":\n        setNewUnit({ ...newUnit, category: value });\n        break;\n      case \"imageUrl\":\n        setNewUnit({ ...newUnit, imageUrl: value });\n        break;\n      case \"location\":\n        setNewUnit({ ...newUnit, location: value });\n        break;\n      case \"price\":\n        setNewUnit({ ...newUnit, price: value });\n        break;\n      default:\n        setNewUnit(newUnit);\n        break;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(newUnit)\n    const errors = [];\n    if (!newUnit.name) errors.push(\"Name cannot be empty\");\n    if (!newUnit.brand) errors.push(\"Brand cannot be empty\");\n    if (!newUnit.type) errors.push(\"Type cannot be empty\");\n    if (!newUnit.year) errors.push(\"Year cannot be empty\");\n    if (!newUnit.category) errors.push(\"Category cannot be empty\");\n    if (!newUnit.imageUrl) errors.push(\"Image URL cannot be empty\");\n    if (!isURL(newUnit.imageUrl)) errors.push(\"Invalid image url\");\n    if (!newUnit.location) errors.push(\"Location cannot be empty\");\n    if (!newUnit.price) errors.push(\"Price cannot be empty\");\n\n    if (errors.length !== 0) {\n      Swal.fire({\n        title: \"Oops...\",\n        icon: \"error\",\n        html: `\n          <div class=\"ml-5 text-left\">\n            ${errors.join(\"<br/>\")}\n          </div>\n          `,\n      });\n    } else {\n      // console.log(newUnit, 'ini masuk')\n      dispatch(addUnit(newUnit, accessToken));\n      history.push(\"/dashboard\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"body\">\n        <div className=\"pt-5 row\" style={{ minHeight: \"88.7vh\" }}>\n          <div className=\"col-1\"></div>\n          <div className=\"col-3\">\n            <div className=\"card shadow bg-card2 text-white\">\n              <div className=\"card-title russo-one pt-3 text-center\">\n                <h4>Add Unit</h4>\n                <hr />\n              </div>\n              <button className=\"btn bg-gold mb-3 nunito mx-2 text-white regbtn\">\n                Dashboard\n              </button>\n            </div>\n          </div>\n          <div className=\"col-7\">\n            <div className=\"card bg-card2 text-white \">\n              <div className=\"card-body\">\n                <div className=\"p-4 nunito rounded shadow\">\n                  <div className=\"row\">\n                    <div className=\"col-4 form-group\">\n                      <label>Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        placeholder=\"e.g. Avanza\"\n                        onChange={(e) => handleInput(\"name\", e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-4 form-group\">\n                      <label>Brand</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        placeholder=\"e.g. Toyota\"\n                        onChange={(e) => handleInput(\"brand\", e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-4 form-group\">\n                      <label>Type</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        placeholder=\"e.g. Automatic\"\n                        onChange={(e) => handleInput(\"type\", e.target.value)}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-6 form-group\">\n                      <label>Year</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        placeholder=\"e.g. 2019\"\n                        onChange={(e) => handleInput(\"year\", e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-6 form-group\">\n                      <label>Category</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        id=\"productName\"\n                        placeholder=\"e.g. Car\"\n                        onChange={(e) =>\n                          handleInput(\"category\", e.target.value)\n                        }\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Image Url</label>\n                    <input\n                      className=\"form-control\"\n                      name=\"image-unit\"\n                      formEncType=\"multipart/form-data\"\n                      type=\"file\"\n                      onChange={(e) => handleInput(\"imageUrl\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Location</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"productName\"\n                      placeholder=\"e.g. Jakarta\"\n                      onChange={(e) => handleInput(\"location\", e.target.value)}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Price</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"price\"\n                      placeholder=\"e.g. 450000\"\n                      onChange={(e) => handleInput(\"price\", e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div class=\"d-flex mt-3 justify-content-end mr-3\">\n                  <div className=\"btn mx-1 btn-primary\">Submit</div>\n                  <div className=\"btn mx-1 btn-danger\">Cancel</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/fetchUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/addUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/index.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setUnits.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setError.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setLoading.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setNewUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/pages/EditUnitPage.jsx",["147","148","149","150"],"import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport fetchUnitById from '../hooks/fetchUnitById'\nimport postEditUnit from '../hooks/postEditUnit'\nimport { isURL } from 'validator'\nimport Swal from 'sweetalert2'\n\nexport default function EditUnitPage() {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const { id } = useParams()\n  const { unit, loading, error } = useSelector(state => state)\n  const [updatedUnit, setUpdateUnit] = useState({})\n  const accessToken = localStorage.getItem('access_token')\n\n  useEffect(() => {\n    if(loading)\n      dispatch(fetchUnitById(id))\n    else\n      setUpdateUnit(unit)\n  }, [loading])\n\n  const handleInput = (target, value) => {\n    switch(target) {\n      case 'name':\n        setUpdateUnit({ ...updatedUnit, name: value })\n        break\n      case 'brand':\n        setUpdateUnit({ ...updatedUnit, brand: value })\n        break\n      case 'type':\n        setUpdateUnit({ ...updatedUnit, type: value })\n        break\n      case 'year':\n        setUpdateUnit({ ...updatedUnit, year: value })\n        break\n      case 'category':\n        setUpdateUnit({ ...updatedUnit, category: value })\n        break\n      case 'imageUrl':\n        setUpdateUnit({ ...updatedUnit, imageUrl: value })\n        break\n      case 'location':\n        setUpdateUnit({ ...updatedUnit, location: value })\n        break\n      case 'price':\n        setUpdateUnit({ ...updatedUnit, price: value })\n        break\n      default:\n        setUpdateUnit(updatedUnit)\n        break\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // console.log(newUnit)\n    const errors = []\n    if(!updatedUnit.name)\n      errors.push('Name')\n    if(!updatedUnit.brand)\n      errors.push('Brand')\n    if(!updatedUnit.type)\n      errors.push('Type')\n    if(!updatedUnit.year)\n      errors.push('Year')\n    if(!updatedUnit.category)\n      errors.push('Category')\n    if(!updatedUnit.imageUrl)\n      errors.push('Image URL')\n    if(!isURL(updatedUnit.imageUrl))\n      errors.push('Invalid image url')\n    if(!updatedUnit.location)\n      errors.push('Location')\n    if(!updatedUnit.price)\n      errors.push('Price')\n\n\n    if(errors.length !== 0) {\n      Swal.fire({\n        title: 'Oops...',\n        icon: 'error',\n        text: `Forms ${errors.join(', ')} cannot be empty`\n      })\n    } else {\n      dispatch(postEditUnit(updatedUnit, accessToken))\n      history.push('/dashboard')\n    }\n  }\n\n  if(loading) return (\n    <>\n      <div className=\"container text-center mt-5\">\n        <h1>Loading....</h1>\n      </div>\n    </>\n  )\n  return (\n    <>\n      <h1 className=\"text-center\">Edit your unit here...</h1>\n      <div className=\"container d-flex mt-5\">\n        <div className=\"col-8\">\n          <img src={unit.imageUrl} alt=\"unit-img\" style={{ width: '40rem', height: '30rem' }}/>\n        </div>\n        <div className=\"col-4 border border-dark\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. Avanza\"\n              value={updatedUnit.name}\n              onChange={(e) => handleInput('name', e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Brand</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. Toyota\"\n              value={updatedUnit.brand}\n              onChange={(e) => handleInput('brand', e.target.value)}  \n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Type</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. Automatic\"\n              value={updatedUnit.type}\n              onChange={(e) => handleInput('type', e.target.value)}  \n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Year</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. 2019\"\n              value={updatedUnit.year}\n              onChange={(e) => handleInput('year', e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Category</label>\n            <select class=\"custom-select\" value={updatedUnit.category} onChange={(e) => handleInput('category', e.target.value)}>\n              <option disabled>-- Select Category --</option>\n              <option value=\"Car\">Car</option>\n              <option value=\"Motorcycle\">Motorcycle</option>\n            </select>\n            {/* <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. Car\"\n              value={updatedUnit.category}\n              onChange={(e) => handleInput('category', e.target.value)}  \n            /> */}\n          </div>\n          {/* <div className=\"form-group\">\n            <label>Image Url</label>\n            <input\n              type=\"url\"\n              className=\"form-control\"\n              id=\"image_url\"\n              placeholder=\"e.g. http://arah.in/adidas-neo\"\n              onChange={(e) => handleInput('imageUrl', e.target.value)}\n            />\n          </div> */}\n          <div className=\"form-group\">\n            <label>Location</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"productName\"\n              placeholder=\"e.g. Jakarta\"\n              value={updatedUnit.location}\n              onChange={(e) => handleInput('location', e.target.value)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Price</label>\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              id=\"price\"\n              placeholder=\"e.g. 450000\"\n              value={updatedUnit.price}\n              onChange={(e) => handleInput('price', e.target.value)}  \n            />\n          </div>\n            <button type=\"submit\" className=\"btn btn-primary form-control my-3\">Submit</button>\n        </form>\n            <button type=\"submit\" className=\"btn btn-primary form-control\">Cancel</button>\n        </div>\n      </div>\n    </>\n  )\n}","/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/deleteUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/deleteUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/fetchUnitById.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/components/VendorUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/hooks/postEditUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setEditedUnit.jsx",[],"/home/agra/Documents/Hacktiv8/Phase-3/Final-Project/client/src/store/actions/setIsLogin.jsx",[],{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":21,"column":6,"nodeType":"157","endLine":21,"endColumn":8,"suggestions":"158"},{"ruleId":"159","severity":1,"message":"160","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":42,"column":9,"nodeType":"161","messageId":"162","endLine":42,"endColumn":27},{"ruleId":"159","severity":1,"message":"164","line":13,"column":27,"nodeType":"161","messageId":"162","endLine":13,"endColumn":32},{"ruleId":"155","severity":1,"message":"165","line":24,"column":6,"nodeType":"157","endLine":24,"endColumn":8,"suggestions":"166"},{"ruleId":"159","severity":1,"message":"167","line":10,"column":9,"nodeType":"161","messageId":"162","endLine":10,"endColumn":17},{"ruleId":"159","severity":1,"message":"168","line":56,"column":9,"nodeType":"161","messageId":"162","endLine":56,"endColumn":21},{"ruleId":"159","severity":1,"message":"169","line":9,"column":9,"nodeType":"161","messageId":"162","endLine":9,"endColumn":16},{"ruleId":"159","severity":1,"message":"170","line":10,"column":9,"nodeType":"161","messageId":"162","endLine":10,"endColumn":20},{"ruleId":"159","severity":1,"message":"164","line":15,"column":9,"nodeType":"161","messageId":"162","endLine":15,"endColumn":14},{"ruleId":"155","severity":1,"message":"171","line":23,"column":6,"nodeType":"157","endLine":23,"endColumn":20,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["175"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'handleSubmitButton' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["176"],"'vendorId' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'history' is assigned a value but never used.","'accessToken' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loading' and 'unit'. Either include them or remove the dependency array.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [history]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch, id, loading, unit]",{"range":"188","text":"189"},[734,736],"[dispatch]",[796,798],"[history]",[805,819],"[dispatch, id, loading, unit]"]